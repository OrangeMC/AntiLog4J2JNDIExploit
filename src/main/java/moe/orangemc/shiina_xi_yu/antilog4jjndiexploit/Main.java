package moe.orangemc.shiina_xi_yu.antilog4jjndiexploit;

import net.md_5.bungee.api.ChatColor;
import org.apache.logging.log4j.core.net.JndiManager;
import org.bukkit.Bukkit;
import org.bukkit.entity.Player;
import org.bukkit.plugin.java.JavaPlugin;

import javax.naming.Context;
import javax.naming.directory.DirContext;
import java.lang.reflect.Field;
import java.util.logging.Level;

import static moe.orangemc.shiina_xi_yu.antilog4jjndiexploit.Config.*;

public class Main extends JavaPlugin
{

    @Override
    public void onEnable()
    {
        try
        {
            onEnable0();
        }
        catch (Throwable e)
        {
            getLogger().log(Level.SEVERE,
                    "Here is some error when loading this plugin. For your security, closing server forced.",
                    e);
            Bukkit.shutdown();
        }
    }

    @Override
    public void reloadConfig()
    {
        super.reloadConfig();
        msg_broadcast_system = getConfig().getString("message.broadcast.system", null);
        msg_broadcast_player_packet = getConfig().getString("message.broadcast.player-packet", null);
        sendBackIfExploit = getConfig().getBoolean("repeat-back-to-exploiter", true);
        forceStart = getConfig().getBoolean("force-start", false);
        if (msg_broadcast_system == null || msg_broadcast_system.isEmpty()) msg_broadcast_system = null;
        if (msg_broadcast_player_packet == null || msg_broadcast_player_packet.isEmpty()) msg_broadcast_player_packet = null;
    }

    private void onEnable0() throws Throwable
    {
        StringChecker.PLATFORM = new StringChecker.PlatformPlayerHelper()
        {
            @Override
            public void sendToPlayer(Object player, String msg)
            {
                ((Player) player).sendMessage(msg);
            }

            @Override
            public String getName(Object player)
            {
                return ((Player) player).getName();
            }

            @Override
            public void broadcast(String msg)
            {
                Bukkit.broadcastMessage(msg);
            }
        };
        try
        {
            saveDefaultConfig();
            reloadConfig();
            Bukkit.getConsoleSender().sendMessage("=============================================================");

            Field contextField = JndiManager.class.getDeclaredField("context");
            Class<?> type = contextField.getType();
            if (type == DirContext.class)
            {
                Bukkit.getConsoleSender().sendMessage(ChatColor.AQUA + "The vulnerability of Log4j2 has already been fixed in your server,");
                Bukkit.getConsoleSender().sendMessage(ChatColor.AQUA + "but I suggest you to keep me here to avoid client-side vulnerabilities. >w<");
            } else if (!Context.class.isAssignableFrom(type))
            {
                Bukkit.getConsoleSender().sendMessage(ChatColor.LIGHT_PURPLE + "type=" + type);
                Bukkit.getConsoleSender().sendMessage(ChatColor.AQUA + "We can't fix this exploit for this version of Log4J2");
                try {
                    if (!forceStart) {
                        Bukkit.getConsoleSender().sendMessage(ChatColor.AQUA + "I decided to shut your server down for your security.");
                        Bukkit.shutdown();
                        return;
                    } else {
                        Bukkit.getConsoleSender().sendMessage(ChatColor.AQUA + "But your server will start anyway. Keep in caution!");
                    }
                } finally {
                    Bukkit.getConsoleSender().sendMessage("=============================================================");
                }
            } else
            {
                Bukkit.getConsoleSender().sendMessage(ChatColor.RED + "Patching Log4j2.... Please wait...");
                try {
                    JndiContextPatcher.initialize(contextField);
                } catch (AlreadyFixedException e) {
                    Bukkit.getConsoleSender().sendMessage(ChatColor.RED + "This version of Log4j2 is already fixed. Skipping.");
                }
            }
        } catch (Throwable e) {
            if (!forceStart) {
                throw e;
            }
            e.printStackTrace();
            Bukkit.getConsoleSender().sendMessage(ChatColor.GOLD + "Forcefully start is enabled. Proceed without server fix applied.");
        }
        Bukkit.getConsoleSender().sendMessage(ChatColor.RED + "Registering player packet monitor.... Please wait...");
        SpigotPlayerClientPacketHandle.initialize(this);
        Bukkit.getConsoleSender().sendMessage(ChatColor.GOLD + "Fixed the vulnerability of Log4J2. Have fun with ${jndi:} payload :P");
        Bukkit.getConsoleSender().sendMessage("=============================================================");
    }
}
